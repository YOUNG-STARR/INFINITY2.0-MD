
const { infinityy } = require("../framework/infinityy");
const { getAllSudoNumbers, isSudoTableNotEmpty } = require("../bdd/sudo");
const conf = require("../set");

infinityy({ nomCom: "owner", categorie: "General", reaction: "ü§ù" }, async (dest, zk, commandeOptions) => {
  const { ms, mybotpic } = commandeOptions;

  const thsudo = await isSudoTableNotEmpty();

  if (thsudo) {
    let msg = `*üëë My Super-User*\n\n`;
    msg += `*üë§ Owner Number*\n`;
    msg += `- üåü @${conf.NUMERO_OWNER}\n\n`;
    msg += `------ *üß∞ Other Sudo(s)* ------\n`;

    let sudos = await getAllSudoNumbers();

    for (const sudo of sudos) {
      if (sudo) {
        const sudonumero = sudo.replace(/[^0-9]/g, '');
        msg += `- üíº @${sudonumero}\n`;
      }
    }

    const ownerjid = conf.NUMERO_OWNER.replace(/[^0-9]/g, '') + "@s.whatsapp.net";
    const mentionedJid = sudos.map(s => s.replace(/[^0-9]/g, '') + "@s.whatsapp.net").concat([ownerjid]);

    // üñºÔ∏è Essayer de r√©cup√©rer la photo de l'utilisateur qui a tap√© la commande
    let userProfilePic = mybotpic(); // valeur par d√©faut : bot
    try {
      userProfilePic = await zk.profilePictureUrl(ms.sender, "image");
    } catch (e) {
      console.log("‚ùå Erreur en r√©cup√©rant la photo de l'utilisateur, on garde la photo par d√©faut.");
    }

    zk.sendMessage(dest, {
      image: { url: userProfilePic },
      caption: msg,
      mentions: mentionedJid
    });
  } else {
    // Aucun sudo trouv√©, on envoie le contact vCard
    const vcard =
      'BEGIN:VCARD\n' +
      'VERSION:3.0\n' +
      'FN:' + conf.OWNER_NAME + '\n' +
      'ORG:undefined;\n' +
      'TEL;type=CELL;type=VOICE;waid=' + conf.NUMERO_OWNER + ':+' + conf.NUMERO_OWNER + '\n' +
      'END:VCARD';
    zk.sendMessage(dest, {
      contacts: {
        displayName: conf.OWNER_NAME,
        contacts: [{ vcard }],
      },
    }, { quoted: ms });
  }
});